# User function Template for python3
class Solution:
    def circularSubarraySum(self, arr):
        # Function to find maximum circular subarray sum.

        def kadane(arr):
            max_ending_here = max_so_far = arr[0]
            for i in range(1, len(arr)):
                max_ending_here = max(arr[i], max_ending_here + arr[i])
                max_so_far = max(max_so_far, max_ending_here)
            return max_so_far

        max_kadane = kadane(arr)
        if max_kadane < 0:
            return max_kadane
        
        total_sum = sum(arr)
        arr_inverted = [-x for x in arr]
        max_inverted_kadane = kadane(arr_inverted)
        max_circular = total_sum + max_inverted_kadane
        return max(max_kadane, max_circular)



#{ 
 # Driver Code Starts
#Initial Template for Python 3
import math
import sys
if __name__ == "__main__":
    T = int(input())
    while (T > 0):
        arr = [int(x) for x in input().strip().split()]
        print(circularSubarraySum(arr))
        T -= 1
# } Driver Code Ends
