class Solution:
    def maxWater(self, arr):
        n = len(arr)
        if n<= 2:
            return 0
            
        lm = [0] * n
        rm = [0] * n
        
        lm[0] = arr[0]
        for i in range(1, n):
            lm[i] = max(lm[i-1], arr[i])
        
        rm[n-1] = arr[n-1]
        for i in range(n-2, -1, -1):
            rm[i] = max(rm[i+1], arr[i])

        water = 0
        for i in range(n):
            water += min(lm[i], rm[i]) - arr[i]

        return water



#{ 
 # Driver Code Starts
#Initial template for Python 3
import math
def main():
    t = int(input())
    while (t > 0):
        arr = [int(x) for x in input().strip().split()]
        obj = Solution()
        print(obj.maxWater(arr))
        t -= 1
        print("~")
if __name__ == "__main__":
    main()
# } Driver Code Ends
